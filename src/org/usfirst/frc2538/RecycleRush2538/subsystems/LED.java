// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2538.RecycleRush2538.subsystems;


import org.usfirst.frc2538.RecycleRush2538.RobotMap;
import org.usfirst.frc2538.RecycleRush2538.commands.*;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.DriverStation.Alliance;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Relay.Value;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class LED extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Relay red = RobotMap.lEDRed;
    Relay green = RobotMap.lEDGreen;
    Relay blue = RobotMap.lEDBlue;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DriverStation station;
    Compressor compressor;
    
     
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ChangeColours());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    
    public void changeColor() {
    	//if (compressor.enabled()) {
    		// if the compressor is on, turn green
			//red.set(Value.kOff);
			//green.set(Value.kForward);
			//blue.set(Value.kOff);
		//}
    	//else{
    	//SmartDashboard.putString("color", station.getAlliance().toString());
    		if (station.getAlliance().compareTo(Alliance.Blue) == 0) {
				// if blue alliance, turn blue
    			red.set(Value.kOff);
    			green.set(Value.kOff);
    			blue.set(Value.kForward);
			}
    		else if (station.getAlliance().compareTo(Alliance.Red) == 0) {
				// if red alliance, turn red
    			red.set(Value.kForward);
    			green.set(Value.kOff);
    			blue.set(Value.kOff);
			}
    		else if (station.getAlliance() == Alliance.Invalid) {
				// if no alliance, turn yellow
    			red.set(Value.kForward);
    			green.set(Value.kForward);
    			blue.set(Value.kOff);
			}
    	}
    //}
}

